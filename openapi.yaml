openapi: 3.0.3
info:
  title: AWS SHOP - OpenAPI 3.0
  description: |-
    This is a sample AWS Shop Server based on the OpenAPI 3.0 specification.
    Some useful links:
    - [The AWS Shop Front-end repository](https://github.com/OKitel/nodejs-aws-shop-react)
    - [The AWS Shop Back-end repository](https://github.com/OKitel/aws-shop-be)
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://epo4kdj6ck.execute-api.eu-central-1.amazonaws.com/prod
tags:
  - name: product
    description: Everything about products in the shop
paths:
  /products:
    get:
      tags:
        - product
      summary: List of products
      description: List of products
      operationId: GetProductsListHandler
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  
  /products/{productID}:
    get:
      tags:
        - product
      summary: Find product by ID
      description: Returns a single product
      operationId: GetProductByIdHandler
      parameters:
        - name: productID
          in: path
          description: ID of product to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'          
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name: 
          type: string
          example: "Product 1"
        price:
          type: number
          example: 1
    NotFound:
      type: string
      example: "'message': 'Product not found'"
        